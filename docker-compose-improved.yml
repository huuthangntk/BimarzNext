version: '3.8'

services:
  aptabase_db:
    image: postgres:15-alpine
    container_name: aptabase_postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aptabase-network

  aptabase_events_db:
    image: clickhouse/clickhouse-server:23.8.16.16-alpine
    container_name: aptabase_clickhouse
    restart: always
    volumes:
      - events-db-data:/var/lib/clickhouse
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aptabase-network

  aptabase:
    image: ghcr.io/aptabase/aptabase:main
    container_name: aptabase_app
    restart: always
    ports:
      - "3000:3000"
    environment:
      # Core Configuration
      BASE_URL: ${BASE_URL}
      AUTH_SECRET: ${AUTH_SECRET}
      REGION: ${REGION}
      
      # Database URLs (URI format)
      DATABASE_URL: ${DATABASE_URL}
      CLICKHOUSE_URL: ${CLICKHOUSE_URL}
      
      # SMTP Configuration
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_ADDRESS: ${SMTP_FROM_ADDRESS}
      
      # OAuth Providers (Optional)
      OAUTH_GITHUB_CLIENT_ID: ${OAUTH_GITHUB_CLIENT_ID}
      OAUTH_GITHUB_CLIENT_SECRET: ${OAUTH_GITHUB_CLIENT_SECRET}
      OAUTH_GOOGLE_CLIENT_ID: ${OAUTH_GOOGLE_CLIENT_ID}
      OAUTH_GOOGLE_CLIENT_SECRET: ${OAUTH_GOOGLE_CLIENT_SECRET}
      
      # Billing (Not needed for self-hosted)
      LEMONSQUEEZY_API_KEY: ${LEMONSQUEEZY_API_KEY}
      LEMONSQUEEZY_SIGNING_SECRET: ${LEMONSQUEEZY_SIGNING_SECRET}
    
    depends_on:
      aptabase_db:
        condition: service_healthy
      aptabase_events_db:
        condition: service_healthy
    
    networks:
      - aptabase-network
    
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  db-data:
    driver: local
  events-db-data:
    driver: local

networks:
  aptabase-network:
    driver: bridge

